#!/usr/bin/env node
// Generated by LiveScript 1.3.1
var fs, fsExtra, path, yargs, nodeSass, cleanCss, argv, vardir, files, outdir, originVarfile, varfile;
fs = require('fs');
fsExtra = require('fs-extra');
path = require('path');
yargs = require('yargs');
nodeSass = require('node-sass');
cleanCss = require('clean-css');
argv = yargs.option('config', {
  alias: 'c',
  description: "dir for custom _variables.scss",
  type: 'string'
}).option('output', {
  alias: 'o',
  description: "output directory. default dist, if omitted.",
  type: 'string'
}).help().alias('help', 'h').check(function(argv, options){
  if (!argv.c || !fs.existsSync(argv.c)) {
    throw new Error("config file directory missing.");
  }
  return true;
}).argv;
vardir = argv.c;
files = ['bootstrap.scss', 'bootstrap-grid.scss', 'bootstrap-reboot.scss'];
outdir = argv.o != null ? argv.o : 'dist';
originVarfile = path.join(__dirname, "..", "node_modules/bootstrap/scss/_variables.scss");
console.log(originVarfile);
if (fs.existsSync(originVarfile)) {
  fs.renameSync(originVarfile, originVarfile + ".original");
}
originVarfile = originVarfile + ".original";
varfile = path.join(vardir, "_variables.scss");
fsExtra.ensureDirSync(outdir);
fsExtra.ensureDirSync(vardir);
if (!fs.existsSync(varfile)) {
  fsExtra.copySync(originVarfile, varfile);
}
files.map(function(fn){
  var code, codeMin;
  console.log("build " + fn + " ...");
  code = nodeSass.renderSync({
    file: path.join(__dirname, "..", "node_modules/bootstrap/scss", fn),
    includePaths: [vardir],
    outputStyle: 'expanded',
    sourceMap: true,
    sourceMapContents: true,
    precision: 6
  });
  codeMin = new cleanCss({
    level: 1,
    format: {
      breakWith: 'lf'
    },
    sourceMap: true,
    sourceMapInlineSources: true
  }).minify(code.css);
  fs.writeFileSync(path.join(outdir, fn.replace("scss", "css")), code.css);
  return fs.writeFileSync(path.join(outdir, fn.replace("scss", "min.css")), codeMin.styles);
});
